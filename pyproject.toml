[project]
name = "media_only_tg_bot"
version = "1.0.0"
description = "A script for a Telegram bot that deletes non-photo material from a group chat topic."
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic[email]>=2.9.2",
    "pydantic-settings>=2.6.1",
    "python-telegram-bot>=21.7",
]
[project.optional-dependencies]
lint = [
    "pylint>=3.3.1", # For now - https://github.com/astral-sh/ruff/issues/970
]
test = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-mypy-plugins>=3.1.2",
    "pytest-cov>=6.0.0",
]
dev = [
    "ruff>=0.7.3",
    "mypy>=1.13.0",
    "pre-commit-uv>=4.1.4",
]
[tool.mypy]
plugins = ['pydantic.mypy']

[tool.ruff]
line-length = 100
[tool.ruff.lint.pycodestyle]
max-doc-length = 100
[tool.ruff.lint]
select = [
    "I",  # isort
    "D",  # pydocstring, all conventions
    "G",  # flake8-logging-format
]
# These rules conflict with some other rules
ignore = ["D203", "D213"]
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"

[tool.pylint]
max-line-length = 100
persistent = true
good-names = ["P"]

[tool.coverage.run]
omit = [
    "*/__main__.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]